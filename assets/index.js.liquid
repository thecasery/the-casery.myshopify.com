/*!
 * JavaScript Cookie v2.0.4
 * https://github.com/js-cookie/js-cookie
 *
 * Copyright 2006, 2015 Klaus Hartl & Fagner Brack
 * Released under the MIT license
 */
(function (factory) {
  if (typeof define === 'function' && define.amd) {
    define(factory);
  } else if (typeof exports === 'object') {
    module.exports = factory();
  } else {
    var _OldCookies = window.Cookies;
    var api = window.Cookies = factory();
    api.noConflict = function () {
      window.Cookies = _OldCookies;
      return api;
    };
  }
}(function () {
  function extend () {
    var i = 0;
    var result = {};
    for (; i < arguments.length; i++) {
      var attributes = arguments[ i ];
      for (var key in attributes) {
        result[key] = attributes[key];
      }
    }
    return result;
  }

  function init (converter) {
    function api (key, value, attributes) {
      var result;

      // Write

      if (arguments.length > 1) {
        attributes = extend({
          path: '/'
        }, api.defaults, attributes);

        if (typeof attributes.expires === 'number') {
          var expires = new Date();
          expires.setMilliseconds(expires.getMilliseconds() + attributes.expires * 864e+5);
          attributes.expires = expires;
        }

        try {
          result = JSON.stringify(value);
          if (/^[\{\[]/.test(result)) {
            value = result;
          }
        } catch (e) {}

        if (!converter.write) {
          value = encodeURIComponent(String(value))
            .replace(/%(23|24|26|2B|3A|3C|3E|3D|2F|3F|40|5B|5D|5E|60|7B|7D|7C)/g, decodeURIComponent);
        } else {
          value = converter.write(value, key);
        }

        key = encodeURIComponent(String(key));
        key = key.replace(/%(23|24|26|2B|5E|60|7C)/g, decodeURIComponent);
        key = key.replace(/[\(\)]/g, escape);

        return (document.cookie = [
          key, '=', value,
          attributes.expires && '; expires=' + attributes.expires.toUTCString(), // use expires attribute, max-age is not supported by IE
          attributes.path    && '; path=' + attributes.path,
          attributes.domain  && '; domain=' + attributes.domain,
          attributes.secure ? '; secure' : ''
        ].join(''));
      }

      // Read

      if (!key) {
        result = {};
      }

      // To prevent the for loop in the first place assign an empty array
      // in case there are no cookies at all. Also prevents odd result when
      // calling "get()"
      var cookies = document.cookie ? document.cookie.split('; ') : [];
      var rdecode = /(%[0-9A-Z]{2})+/g;
      var i = 0;

      for (; i < cookies.length; i++) {
        var parts = cookies[i].split('=');
        var name = parts[0].replace(rdecode, decodeURIComponent);
        var cookie = parts.slice(1).join('=');

        if (cookie.charAt(0) === '"') {
          cookie = cookie.slice(1, -1);
        }

        try {
          cookie = converter.read ?
            converter.read(cookie, name) : converter(cookie, name) ||
            cookie.replace(rdecode, decodeURIComponent);

          if (this.json) {
            try {
              cookie = JSON.parse(cookie);
            } catch (e) {}
          }

          if (key === name) {
            result = cookie;
            break;
          }

          if (!key) {
            result[name] = cookie;
          }
        } catch (e) {}
      }

      return result;
    }

    api.get = api.set = api;
    api.getJSON = function () {
      return api.apply({
        json: true
      }, [].slice.call(arguments));
    };
    api.defaults = {};

    api.remove = function (key, attributes) {
      api(key, '', extend(attributes, {
        expires: -1
      }));
    };

    api.withConverter = init;

    return api;
  }

  return init(function () {});
}));

// slider
var next_pic = function(){
  $('.slide-img').stop(true, true);
  var currentSlide = $('.active-img'),
      currentDot = $('.active-dot'),
      nextDot = currentDot.next();
      nextSlide = currentSlide.next();
  if (nextDot.length == 0){
      nextSlide = $('.slide-img').first();
      nextDot = $('.dot').first();
  }
  
  // animation: The front_slide is crutial, fix the position of the small number picture.
  // Otherwise, the small element cannot on top of large number element.
  var front_slide = (currentSlide.index() < nextSlide.index()) ? (currentSlide) : (nextSlide);
  front_slide.css("position", "absolute");

  nextSlide.addClass('active-img').fadeIn("slow", function(){
      currentSlide.removeClass('active-img').css("display","none");
      front_slide.css("position","static");
  });
  
  currentDot.removeClass('active-dot');
  nextDot.addClass('active-dot');
}

var prev_pic = function(){
  $('.slide-img').stop(true, true);
  var currentSlide = $('.active-img'),
      currentDot = $('.active-dot'),
      prevDot = currentDot.prev();
      prevSlide = currentSlide.prev();
  if (prevDot.length == 0){
      prevSlide = $('.slide-img').last();
      prevDot = $('.dot').last();
  }
  
  //animation
  var front_slide = (currentSlide.index() < prevSlide.index()) ? (currentSlide) : (prevSlide);
  front_slide.css("position", "absolute");
  prevSlide.addClass('active-img').fadeIn("slow", function(){
    currentSlide.removeClass('active-img').css("display","none");
    front_slide.css("position","static");
  });
  
  currentDot.removeClass('active-dot');
  prevDot.addClass('active-dot');
}

// click on dot to change pictures
var change_pic = function(){
  $('.slide-img').stop(true, true);
  var currentSlide = $('.active-img'),
      currentDot = $('.active-dot'),
      nextDot = currentDot,
      nextSlide = currentSlide;

  if ($(this).hasClass('active-dot')) return;

  // index technique, very important
  var index = $(this).index();
  nextDot = $('.dot').eq(index);
  nextSlide = $('.slide-img').eq(index);

  //animation
  var front_slide = (currentSlide.index() < nextSlide.index()) ? (currentSlide) : (nextSlide);
  front_slide.css("position", "absolute");
  nextSlide.addClass('active-img').fadeIn("slow", function(){
    currentSlide.removeClass('active-img').css("display","none");
    front_slide.css("position","static");
  });
  
  currentDot.removeClass('active-dot');
  nextDot.addClass('active-dot');
}

var carousel_setting = function(){
  // Initialization of first image and dot, interval time
  $(".dot").first().addClass('active-dot');
  $(".slide-img").first().css("display","block");
  $(".slide-img").first().addClass('active-img');

  var speed = {{ settings.slider_home_rate }};
  var auto_slide = setInterval(next_pic, speed);

  $('.arrow-next').click(next_pic);
  $('.arrow-prev').click(prev_pic);
  $('.dot').click(change_pic);
  $('.slider-nav').hover(function(){
    clearInterval(auto_slide);
  }, function(){
    auto_slide = setInterval(next_pic, speed);
  });
}

/* Belowing is implemented by Yang Wang @thecasery.Inc 2015 */

/* The autoscale element function is used for adjusting picture size and location according to screen size.
 * The container size is set to current screen size.
 * The inside element size is set to 2.78 : 1. if it's largger than 2.78 : 1, we cut some of the width;
 *   if it's smaller than 2.78 : 1, we cut some of the height.
 * 
 * To realize this function, don't forget to set container "overflow:hidden", and use margin to set element position.
 */
var autoscale_picture = function(){
  var picture_height, picture_width, margin_top, margin_left; 
  var mobile_device;  // device type detection
  if (document.documentElement.clientWidth <= 766){
    mobile_device = true;
  } else {
    mobile_device = false;
  }

  if (mobile_device){
    $('.main-banner__shop-button').css('display','none');
    $('.autoscale__elem').attr('src','https://cdn.shopify.com/s/files/1/0964/6944/files/main-banner-mobile.jpg?17679497896564180335');

    picture_width = document.documentElement.clientWidth;
    picture_height = picture_width * 0.75;
    $('.autoscale__div').css('height', picture_height);
    $('.autoscale__div').css('width', picture_width);

    if (picture_height * 1.33 < picture_width) {
      picture_height = picture_width / 1.33;
    } else {
      picture_width = picture_height * 1.33;
    }
    margin_top = ($('.autoscale__div').height() - picture_height) / 2;
    margin_left = (document.documentElement.clientWidth - picture_width) / 2;

    // This is a side function, just to adjust slider's navigation-bar position
    $('.slider-nav').css('top', $('.slide-img').height() - 30);
    $('.slider-nav').css('left', ($('.slide-img').width()-180) / 2);
  } else {
    $('.main-banner__shop-button').css('display','block');
    $('#btn-hover').css('display','none');
    $('.autoscale__elem').attr('src','https://cdn.shopify.com/s/files/1/0964/6944/files/banner_without_shop_now.jpg?7486202873702819664');
    // At this point, pic_width & height are screen size, used to set div size.
    picture_height = Math.max(document.documentElement.clientHeight - 300, 600);
    picture_width = document.documentElement.clientWidth;
    $('.autoscale__div').css('height', picture_height);
    $('.autoscale__div').css('width', picture_width);

    // Adjust picture width:height to 2.78:1
    if (picture_height < 600 && picture_width < 1668) {
      picture_height = 600;
      picture_width = 1668;
    } else if (picture_height * 2.78 < picture_width) {
      picture_height = picture_width / 2.78;
    } else {
      picture_width = picture_height * 2.78;
    }

    // calculate margin to adjust picture position, make it at center.
    margin_top = (Math.max(document.documentElement.clientHeight - 300, 600) - picture_height) / 2;
    margin_left = (document.documentElement.clientWidth - picture_width) / 2;

    // This is a side function, just to adjust slider's navigation-bar position
    $('.slider-nav').css('top', $('.slide-img').height() - 70);
    $('.slider-nav').css('left', ($('.slide-img').width()-200) / 2);
  }

  $('.autoscale__elem').css('height', picture_height);
  $('.autoscale__elem').css('width', picture_width);

  $('.autoscale__elem').css('margin-left', margin_left);
  $('.autoscale__elem').css('margin-top', margin_top);

  // something related to bottom pictures
  var screen_width = document.documentElement.clientWidth;
  if (screen_width > 766){
    $('.main-banner__shop-button').width($('.autoscale__elem').width() * 0.09);
    $('.main-banner__shop-button').css('left', $('.autoscale__elem').offset().left + $('.autoscale__elem').width() * 0.455);
    $('.main-banner__shop-button').css('top', $('.autoscale__elem').offset().top + $('.autoscale__elem').height() * 0.63);
  }

  if (screen_width > 1200){
    $('.autoscale__sub-div').width(screen_width / 4 - 25);
  } else if (screen_width > 700){
    $('.autoscale__sub-div').width('49.8%');
  } else {
    $('.autoscale__sub-div').width('100%');
  }
};

function openPopup() {
  setTimeout( function() {$('.header-bar__discount').trigger('click'); },20000);
}

$(document).ready(function(){
  if (Cookies.get('popup') === 'yes') {

  } else {
    openPopup();
  }
  Cookies.set('popup', 'yes', { expires: 7 });

	carousel_setting();
  autoscale_picture();
  window.onresize = autoscale_picture;
});