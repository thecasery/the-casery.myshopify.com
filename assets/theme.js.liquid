/* Simple jQuery Equal Heights @version 1.5.1. Copyright (c) 2013 Matt Banks. Dual licensed under the MIT and GPL licenses. */
!function(a){a.fn.equalHeights=function(){var b=0,c=a(this);return c.each(function(){var c=a(this).innerHeight();c>b&&(b=c)}),c.css("height",b)},a("[data-equal]").each(function(){var b=a(this),c=b.data("equal");b.find(c).equalHeights()})}(jQuery);

/* Run function after window resize */
var afterResize=(function(){var t={};return function(callback,ms,uniqueId){if(!uniqueId){uniqueId="Don't call this twice without a uniqueId";}if(t[uniqueId]){clearTimeout(t[uniqueId]);}t[uniqueId]=setTimeout(callback,ms);};})();

window.theme = window.theme || {};

// Facebook api
window.fbAsyncInit = function() {
  FB.init({
    appId      : '1516749411980352',
    xfbml      : true,
    version    : 'v2.5'
  });
};

(function(d, s, id){
  var js, fjs = d.getElementsByTagName(s)[0];
  if (d.getElementById(id)) {return;}
  js = d.createElement(s); js.id = id;
  js.src = "//connect.facebook.net/en_US/sdk.js";
  fjs.parentNode.insertBefore(js, fjs);
}(document, 'script', 'facebook-jssdk'));

theme.cacheSelectors = function () {
  theme.cache = {
    // General
    $w: $(window),
    $body: $('body'),

    // Mobile Nav
    $mobileNavTrigger: $('#MobileNavTrigger'),
    $mobileNav: $('#MobileNav'),
    
    // Product page
    $productImage: $('#ProductPhotoImg'),
    $productImageGallery: $('.gallery__item'),

    // Cart Page
    cartNoteAdd: '.cart__note-add',
    cartNote: '.cart__note'
  }
};

theme.init = function () {
  theme.cacheSelectors();
  theme.mobileNav();
  theme.cartPage();
};

theme.mobileNav = function () {
  theme.cache.$mobileNavTrigger.on('click', function() {
    theme.cache.$mobileNav.slideToggle(220);
  });
};

theme.cartPage = function () {
  {% unless settings.cart_notes_enable %}
    return;
  {% endunless %}

  theme.cache.$body.on('click', theme.cache.cartNoteAdd, function () {
    $(this).addClass('is-hidden');
    $(theme.cache.cartNote).addClass('is-active');
    ajaxifyShopify.sizeDrawer();
  });
};

// Initialize theme's JS on docready
$(theme.init);

if ((typeof Shopify) == 'undefined') {
  var Shopify = {};
}

/* This is version 2.0 of Inpage shopping cart
 *
 * The basic strategy is hidding the detail information of the product, and only display it when click the image.
 * Node that most important part is the css. Actually, '.grid__product' are at the same line with same height.
 * But display '.inpage-cart' could make one element pretty high, and the width of 'inpage-cart' could be larger than its parent.
 * So the effects is that '.inpage-cart' takes a whole line. But actually its in the same line with other 'grid__product'
 * 
 * BTW: There're several 'active-' classes that helping us locating current working elements.
 * 'active-product' is current 'grid_product', 'active-'
 */

// Social Media Change: '.back-img' is the share img, 'h1' is product title, '.active-option1' is phone style name
function change_social_media(product){
  // Facebook
  product.find('#facebook').attr("href","https://www.facebook.com/dialog/feed?app_id=1516749411980352&display=page&caption=Welcome%20to%20the%20casery&picture=http:"+product.find('.back-img').attr("src")+"&name="+product.find('#title').text()+"&description="+product.find('.active-option1').attr("name")+"&link=http://the-casery.myshopify.com/collections/all&redirect_uri="+window.location.href+"");
  // Pinterest
  product.find('#pinterest').attr("href","https://pinterest.com/pin/create/button/?url=http://the-casery.myshopify.com/collections/all&amp;media=http:"+product.find('.back-img').attr("src")+"&amp;description="+product.find('#title').text()+" ("+product.find('.active-option1').attr("name")+")");
  // Twitter
  product.find('#twitter').attr("href","https://twitter.com/share?url=http:"+product.find('.back-img').attr("src")+"&amp;text=The Casery - "+product.find('#title').text()+" ("+product.find('.active-option1').attr("name")+")");
  // Tumblr
  product.find('#tumblr').attr("href","https://www.tumblr.com/widgets/share/tool?posttype=photo&content="+product.find('.back-img').attr("src")+"&caption="+product.find('#title').text()+" ("+product.find('.active-option1').attr("name")+")&canonicalUrl=http://the-casery.myshopify.com/collections/all");
}


// initial option3 value, which is picture
function init_option3(product, start_pos, total_options, variants){
  // remove previous image
  $('.active-option3').removeClass('active-option3');
  $('.active-dot').removeClass('active-dot');
  product.find('#option3 div').remove();
  product.find('.dot').remove();

  var arr3 = new Array();
  for (var i = start_pos; i < total_options && variants[i][0] == variants[start_pos][0] && variants[i][1] == variants[start_pos][1]; i++){
    var flag3 = true;
    for (var j = 0; j < arr3.length; j++){
      if (arr3[j] == variants[i][2]){
        flag3 = false;
        break;
      }
    }
    if (flag3){
      arr3.push(variants[i][2]);
      product.find('#option3').append("<div class='thumbnail-img'><img style='display:block; width:100%;' src='"+variants[i][3]+"' /></div>");
      if (document.documentElement.clientWidth <= 767){
        product.find('.slider-dots').append('<li class="dot">&bull;</li>');
      }
    }
  }

  // reset '.back-img', '.active-option3', reset social media
  product.find('#option3 img').first().addClass("active-option3");
  product.find('.back-img').attr("src", $('.active-option3').attr("src"));
  if (document.documentElement.clientWidth <= 767){
    product.find('.dot').first().addClass('active-dot');
    product.find('.slider-dots').css('left',$('.back-img').offset().left + ($('.back-img').width() - $('.slider-dots').width() + 10) / 2);
    product.find('.slider-dots').css('top',$('.back-img').offset().top + $('.back-img').height() - 50);
  }
  change_social_media(product);
}

// initial option2 value, which is phone type
function init_option2(product, start_pos, total_options, variants){
  // remove previous image
  $('.active-option2').removeClass('active-option2');
  product.find('#option2 div').remove();

  var arr2 = new Array();
  var i = 0;
  for (; i < total_options && variants[i][0] != variants[start_pos][0]; i++);
  for (; i < total_options && variants[i][0] == variants[start_pos][0]; i++){
    var flag2 = true;
    for (var j = 0; j < arr2.length; j++){
      if (arr2[j] == variants[i][1]){
        flag2 = false;
        break;
      }
    }
    if (flag2 && variants[i][1] != 'Null'){
      arr2.push(variants[i][1]);
      product.find('#option2').append("<div class='option2-outer-container' name='"+variants[i][1]+"' onmouseover=\"this.style.cursor='hand'\"><img style='width:88px; height:88px;' src='"+variants[i][3]+"'/></div>");
    }
  }

  // reset start_pos for init_option2
  var j = 0;
  for (; j < arr2.length && arr2[j] != variants[start_pos][1]; j++);
  product.find('#option2 .option2-outer-container img').eq(j).addClass('active-option2');
  product.find('#productSelect').get(0).selectedIndex = start_pos;
  
  // change money and init option3
  product.find('.product-pc-money').text(variants[start_pos][4]);
  product.find('.product-mobile-money').text(variants[start_pos][4]);
  init_option3(product, start_pos, total_options, variants);
}

// initial option1 value, which is case type
function init_option1(product, start_pos, total_options, variants){
  $('.active-option1').removeClass('active-option1');
  product.find('#option1 div').remove();

  var arr1 = new Array();
  for (var i = 0; i < total_options; i++){
    var flag1 = true;
    for (var j = 0; j < arr1.length; j++){
      if (arr1[j] == variants[i][0]){
        flag1 = false;
        break;
      }
    }
    if (flag1){
      arr1.push(variants[i][0]);
      product.find('#option1').append("<div id='"+variants[i][0]+"' class='option1-btn'><p>"+variants[i][0]+"</p></div>");
    }
  }

  var i = 0, j = 0;
  for (; i < total_options && variants[i][0] != variants[start_pos][0]; i++);
  for (; j < arr1.length && arr1[j] != variants[start_pos][0]; j++);
  product.find('#option1 .option1-btn').eq(j).addClass('active-option1');
  init_option2(product, start_pos, total_options, variants);
}

// initialize all the variants!!
function init_variants(product){
  var productSelect = product.find('#productSelect');
  var product_options = productSelect.find('option');
  var total_options = product_options.length;
  var variants = new Array();

  // string split, I use ' @ ' to seperate different options
  for (var i = 0; i < total_options; i++){
    var string = product_options.eq(i).text();
    var t = string.split(' @ ');

    variants.push(t);
  }

  init_option1(product, product.find('#productSelect').get(0).selectedIndex, total_options, variants);
}


/* Part 2 : Updating */
// update option0
function change_option0(product){
  var new_phone_type_url = product.find('#option0').val();

  window.location.href = new_phone_type_url;
}

// update option1
function change_option1(option, cart, total_options, variants){
  $('.active-option1').removeClass('active-option1');
  option.addClass('active-option1');

  var new_option0_name = option.attr('id');
  var new_index = 0;
  for (; new_index < total_options && variants[new_index][0] != new_option0_name; new_index++);

  // initial option2
  init_option2(cart, new_index, total_options, variants);
}

// update option2
function change_option2(option, cart, total_options, variants){
  // remove all active-image class which highlight the border, and we need to remove previous
  $('.active-option2').removeClass('active-option2');
  option.find('img').addClass('active-option2');

  // After pre-set, find the first index that have the same picture url, that is the start of variant.option1
  var new_option2_name = option.attr("name");
  var current_index = cart.find('#productSelect').get(0).selectedIndex;

  var new_index = 0;
  for (; new_index < total_options && variants[new_index][0] != variants[current_index][0]; new_index ++);
  for (; new_index < total_options && variants[new_index][0] == variants[current_index][0] && variants[new_index][1] != new_option2_name; new_index++);

  // initial option3
  cart.find('#productSelect').get(0).selectedIndex = new_index;
  cart.find('.product-pc-money').text(variants[new_index][4]);
  cart.find('.product-mobile-money').text(variants[new_index][4]);
  init_option3(cart, new_index, total_options, variants);
}

// update option3
function change_option3(option, cart, total_options, variants){
  cart.find('.back-img').attr("src", option.attr("src"));
  $('.active-option3').removeClass("active-option3");
  option.addClass("active-option3");

  // social media
  change_social_media(cart);
}

function change_option3_mobile(direction, cart){
  var next_picture;
  var next_dot;
  if (direction == 'left'){
    if ($('.active-option3').parent().is(':first-child')){
      next_dot = cart.find('.dot').last();
      next_picture = cart.find('#option3 div').last().find('img');
    } else {
      next_dot = $('.active-dot').prev();
      next_picture = $('.active-option3').parent().prev().find('img');
    }
  } else if (direction == 'right'){
    if ($('.active-option3').parent().is(':last-child')){
      next_dot = cart.find('.dot').first();
      next_picture = cart.find('#option3 div').first().find('img');
    } else {
      next_dot = $('.active-dot').next();
      next_picture = $('.active-option3').parent().next().find('img');
    }
  }

  cart.find('.back-img').attr("src", next_picture.attr("src"));
  $('.active-option3').removeClass('active-option3');
  $('.active-dot').removeClass('active-dot');
  next_dot.addClass('active-dot');
  next_picture.addClass('active-option3');

  // social media
  change_social_media(cart);
}

/* Try not to use $(this) or other things, only use the parameter in this function */
function product_click(cart){
  var productSelect = cart.find('#productSelect');
  var product_options = productSelect.find('option');
  var total_options = product_options.length;
  var variants = new Array();

  // string split, I use ' @ ' to seperate different options
  for (var i = 0; i < total_options; i++){
    var string = product_options.eq(i).text();
    var t = string.split(' @ ');

    variants.push(t);
  }

  /* change value of option 0 */
  // don't forget to off everything before register new event, to avoid multiple calls
  cart.find('#option0').unbind('change').change(function(){
    change_option0(cart);
  });

  /* change value of option 1 */
  cart.find('#option1').off('click','.option1-btn').on('click', '.option1-btn', function(){
    change_option1($(this), cart, total_options, variants);
  });

  /* change value of option 2 */
  cart.find('#option2').off('click','.option2-outer-container').on('click', '.option2-outer-container', function(){
    change_option2($(this), cart, total_options, variants);
  });

  /* change value of option 3 */
  //This is easy, just image change. But note that JQuery 1.7+ use 'on' method to replace bind, delegate, etc.
  if (document.documentElement.clientWidth > 767){
    cart.find('#option3').off('click','img').on('click','img',function(){
      change_option3($(this), cart, total_options, variants);
    });
  } else {
    // Write a jquery touch swipe detector!
    var xDown = null;
    var yDown = null;
    
    cart.find('.back-img').off('touchstart').on('touchstart', function(e){
      xDown = e.originalEvent.touches[0].pageX;
      yDown = e.originalEvent.touches[0].pageY;
    });

    cart.find('.back-img').off('touchmove').on('touchmove', function(e){
      if ( !xDown || !yDown) {
        return;
      }
      var xUp = e.originalEvent.touches[0].pageX;
      var yUp = e.originalEvent.touches[0].pageY;
      var xDiff = xDown - xUp;
      var yDiff = yDown - yUp;

      if ( Math.abs(yDiff) <= Math.abs(xDiff) && xDiff > 8 ) { 
        change_option3_mobile('left', cart);
      } else if ( Math.abs(yDiff) <= Math.abs(xDiff) && xDiff < -8){
        change_option3_mobile('right', cart);
      }

      /* reset values */
      xDown = null;
      yDown = null; 
    });
  }
}

/* artist_page animation*/
// There might be some bugs
var artist_page = function(){
  $('.artist-container').off('click').on('click',function(){
    var name = $(this).find('#artist-handle').text();
    window.location.href = "http://the-casery.myshopify.com/collections/" + name;
  });

  $('.artist-container-pc').off('click').on('click',function(){
    var name = $(this).find('#artist-handle').text();
    window.location.href = "http://the-casery.myshopify.com/collections/" + name;
  });
}

// slider
var next_pic = function(){
  $('.slide-img').stop(true, true);
  var currentSlide = $('.active-img'),
      currentDot = $('.active-dot'),
      nextDot = currentDot.next();
      nextSlide = currentSlide.next();
  if (nextDot.length == 0){
      nextSlide = $('.slide-img').first();
      nextDot = $('.dot').first();
  }
  
  // animation: The front_slide is crutial, fix the position of the small number picture.
  // Otherwise, the small element cannot on top of large number element.
  var front_slide = (currentSlide.index() < nextSlide.index()) ? (currentSlide) : (nextSlide);
  front_slide.css("position", "absolute");

  nextSlide.addClass('active-img').fadeIn("slow", function(){
      currentSlide.removeClass('active-img').css("display","none");
      front_slide.css("position","static");
  });
  
  currentDot.removeClass('active-dot');
  nextDot.addClass('active-dot');
}

var prev_pic = function(){
  $('.slide-img').stop(true, true);
  var currentSlide = $('.active-img'),
      currentDot = $('.active-dot'),
      prevDot = currentDot.prev();
      prevSlide = currentSlide.prev();
  if (prevDot.length == 0){
      prevSlide = $('.slide-img').last();
      prevDot = $('.dot').last();
  }
  
  //animation
  var front_slide = (currentSlide.index() < prevSlide.index()) ? (currentSlide) : (prevSlide);
  front_slide.css("position", "absolute");
  prevSlide.addClass('active-img').fadeIn("slow", function(){
    currentSlide.removeClass('active-img').css("display","none");
    front_slide.css("position","static");
  });
  
  currentDot.removeClass('active-dot');
  prevDot.addClass('active-dot');
}

// click on dot to change pictures
var change_pic = function(){
  $('.slide-img').stop(true, true);
  var currentSlide = $('.active-img'),
      currentDot = $('.active-dot'),
      nextDot = currentDot,
      nextSlide = currentSlide;

  if ($(this).hasClass('active-dot')) return;

  // index technique, very important
  var index = $(this).index();
  nextDot = $('.dot').eq(index);
  nextSlide = $('.slide-img').eq(index);

  //animation
  var front_slide = (currentSlide.index() < nextSlide.index()) ? (currentSlide) : (nextSlide);
  front_slide.css("position", "absolute");
  nextSlide.addClass('active-img').fadeIn("slow", function(){
    currentSlide.removeClass('active-img').css("display","none");
    front_slide.css("position","static");
  });
  
  currentDot.removeClass('active-dot');
  nextDot.addClass('active-dot');
}

var carousel_setting = function(){
  // Initialization of first image and dot, interval time
  $(".dot").first().addClass('active-dot');
  $(".slide-img").first().css("display","block");
  $(".slide-img").first().addClass('active-img');

  var speed = {{ settings.slider_home_rate }};
  var auto_slide = setInterval(next_pic, speed);

  $('.arrow-next').click(next_pic);
  $('.arrow-prev').click(prev_pic);
  $('.dot').click(change_pic);
  $('.slider-nav').hover(function(){
    clearInterval(auto_slide);
  }, function(){
    auto_slide = setInterval(next_pic, speed);
  });
}

/* Belowing is implemented by Yang Wang @thecasery.Inc 2015 */

/* The autoscale element function is used for adjusting picture size and location according to screen size.
 * The container size is set to current screen size.
 * The inside element size is set to 2:1. if it's largger than 2:1, we cut some of the width;
 *   if it's smaller than 2:1, we cut some of the height.
 * 
 * To realize this function, don't forget to set container "overflow:hidden", and use margin to set element position.
 */
var autoscale_picture = function(){
  var picture_height, picture_width, margin_top, margin_left; 
  var mobile_device = false;  
  if (document.documentElement.clientWidth <= 767){
    mobile_device = true;
  } else {
    mobile_device = false;
  }

  if (mobile_device){
    picture_width = document.documentElement.clientWidth;
    picture_height = picture_width;
    $('.autoscale__div').css('height', picture_height);
    $('.autoscale__div').css('width', picture_width);

    if (picture_height * 2 < picture_width) {
      picture_height = picture_width / 2;
    } else {
      picture_width = picture_height * 2;
    }
    margin_top = ($('.autoscale__div').height() - picture_height) / 2;
    margin_left = (document.documentElement.clientWidth - picture_width) / 2;

    // This is a side function, just to adjust slider's navigation-bar position
    $('.slider-nav').css('top', $('.slide-img').height() - 30);
    $('.slider-nav').css('left', ($('.slide-img').width()-180) / 2);
  } else {
    // At this point, pic_width & height are screen size, used to set div size.
    picture_height = document.documentElement.clientHeight - 300;
    picture_width = document.documentElement.clientWidth;
    $('.autoscale__div').css('height', picture_height);
    $('.autoscale__div').css('width', picture_width);

    // Adjust picture width:height to 2:1
    if (picture_height < 600 && picture_width < 1200) {
      picture_height = 600;
      picture_width = 1200;
    } else if (picture_height * 2 < picture_width) {
      picture_height = picture_width / 2;
    } else {
      picture_width = picture_height * 2;
    }

    // calculate margin to adjust picture position, make it at center.
    margin_top = (document.documentElement.clientHeight - picture_height - 300) / 2;
    margin_left = (document.documentElement.clientWidth - picture_width) / 2;

    // This is a side function, just to adjust slider's navigation-bar position
    $('.slider-nav').css('top', $('.slide-img').height() - 70);
    $('.slider-nav').css('left', ($('.slide-img').width()-200) / 2);
  }
  $('.autoscale__elem').css('height', picture_height);
  $('.autoscale__elem').css('width', picture_width);

  $('.autoscale__elem').css('margin-left', margin_left);
  $('.autoscale__elem').css('margin-top', margin_top);

  // Also here's width of inpage-cart to be whole page
  if ($('.active-cart').hasClass('active-cart')){
    $('.active-cart').css('width', document.documentElement.clientWidth);
    if ($('.active-cart').parent().hasClass('grid__product')){
      $('.active-cart').css('margin-left', 0 - $('.active-product').offset().left - 10);
    } else {
      $('.active-cart').css('margin-left', 0);
    }
  }
};

var autoscale_element=function(){
}

var page_init = function(){
  var page_type_ori  = $('#page-type').text();
  var page_type      = page_type_ori;
  var page_url       = window.location.href;     // Returns full URL
  var page_width     = document.documentElement.clientWidth;

  // decide page_type
  if (page_type_ori.indexOf('collection') >= 0){
    if (page_url.indexOf('artist') >= 0){
      page_type = 'artist-all';
    } else if (page_url.indexOf('snap') >= 0 || page_url.indexOf('clear') >= 0 || page_url.indexOf('tough') >= 0 || page_url.indexOf('accessory') >= 0){
      page_type = 'collection-regular';
    } else {
      page_type = 'artist-single';
    }
  } else if (page_type_ori.indexOf('product') >= 0){
    page_type = 'product';
  } else if (page_type_ori.indexOf('index') >= 0){
    page_type = 'index';
  }
  $('#page-type').text(page_type);

  // init device type
  if (page_width > 767){
    $('#device-type').text('desktop');
  } else {
    $('#device-type').text('mobile');
  }

  // init page_content
  if (page_type.indexOf('artist-all') >= 0){
    artist_page();
  } else if (page_type.indexOf('artist-single') >= 0){
    // init cart here, although it might not display
    var carts = $('.artist-cart');
    for (var i = 0; i < carts.length; i++){
      var cart = carts.eq(i);
      init_variants(cart);
      product_click(cart);
    }

    if (page_width > 767){
      $('.artist-content').css('display','block');
      $('.mobile-artist-content').css('display','none');
    } else {
      $('.artist-content').css('display','none');
      $('.mobile-artist-content').css('display','block');
    }
  } else if (page_type.indexOf('collection-regular') >= 0){
  } else if (page_type.indexOf('product') >= 0){
    var product=$('.product-container');
    init_variants(product);
    product_click(product);

  } else if (page_type.indexOf('index') >= 0){

    carousel_setting();
    autoscale_picture();
  }

  $('.header-bar__link').off('mouseover').on('mouseover',function(){
    $(this).find('.header-bar__sublink').css('display','block');
  });

  $('.header-bar__link').off('mouseleave').on('mouseleave',function(){
    $(this).find('.header-bar__sublink').css('display','none');
  });

  $('#device-width').text(document.documentElement.clientWidth);
  window.onresize = autoscale_picture;
}

$(document).ready(page_init);